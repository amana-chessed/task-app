{"ast":null,"code":"var _jsxFileName = \"/home/chess/01_Projects/amana/ReactJS-TaskMiniProject/task-front-end/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport Modal from './Modals';\nimport Backdrop from './Backdrop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task(props) {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  function deleteHandler() {\n    console.log(`Clicked ${props.details}`);\n    setModalIsOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), props.details, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: deleteHandler,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrashCan\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 65\n        }, this), props.buttonText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Task, \"d4gKB9FOjUoqrytIak5jiPIqzB0=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["FontAwesomeIcon","faTrashCan","useState","Modal","Backdrop","Task","props","modalIsOpen","setModalIsOpen","deleteHandler","console","log","details","buttonText"],"sources":["/home/chess/01_Projects/amana/ReactJS-TaskMiniProject/task-front-end/src/components/Task.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport Modal from './Modals';\nimport Backdrop from './Backdrop';\n\nfunction Task(props){\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    function deleteHandler(){\n        console.log(`Clicked ${props.details}`);\n        setModalIsOpen(true);\n    }\n\n    return (\n        <div className=\"card\">\n            <div>\n                <input type=\"checkbox\"></input>{props.details}\n                <button className='btn' onClick={deleteHandler}><FontAwesomeIcon icon={faTrashCan}/>{props.buttonText}</button>\n            </div>\n            <Backdrop/>\n            <Modal/>\n        </div>\n    );\n}\n\nexport default Task;"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;EAAA;;EAChB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;;EAEA,SAASO,aAAT,GAAwB;IACpBC,OAAO,CAACC,GAAR,CAAa,WAAUL,KAAK,CAACM,OAAQ,EAArC;IACAJ,cAAc,CAAC,IAAD,CAAd;EACH;;EAED,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,wBACI;MAAA,wBACI;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QADJ,EACoCF,KAAK,CAACM,OAD1C,eAEI;QAAQ,SAAS,EAAC,KAAlB;QAAwB,OAAO,EAAEH,aAAjC;QAAA,wBAAgD,QAAC,eAAD;UAAiB,IAAI,EAAER;QAAvB;UAAA;UAAA;UAAA;QAAA,QAAhD,EAAqFK,KAAK,CAACO,UAA3F;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QALJ,eAMI,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GAlBQR,I;;KAAAA,I;AAoBT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}