{"ast":null,"code":"var _jsxFileName = \"/home/chess/01_Projects/amana/ReactJS-TaskMiniProject/client/src/components/TaskAdder.js\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskAdder() {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [response, setResponse] = useState(null);\n  useEffect(() => {\n    fetch(\"/tasks\").then(res => res.json()).then(res => setResponse(res.message));\n  }, []);\n\n  function addTaskHandler() {\n    if (isEmptyOrSpaces(text)) return; //do nothing\n\n    fetch('http://localhost:8000/tasks/add', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        \"details\": text\n      })\n    }).then(res => {\n      if (!res.ok) {\n        setResponse(\"Server Error. Failed to add task!\");\n      }\n\n      console.log(\"Success\");\n    }).catch(e => {\n      setResponse(e.message);\n    });\n    setText(\"\");\n  }\n\n  function onChangeHandler(evt) {\n    setText(evt.target.value);\n  }\n\n  function isEmptyOrSpaces(str) {\n    return str === null || str.match(/^ *$/) !== null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: evt => onChangeHandler(evt)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: addTaskHandler,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPlusSquare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: !data ? \"Loading\" : data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskAdder, \"Ry1r16pCy7HKeNPmxYm6WuKY054=\");\n\n_c = TaskAdder;\nexport default TaskAdder;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskAdder\");","map":{"version":3,"names":["FontAwesomeIcon","faPlusSquare","useState","useEffect","TaskAdder","text","setText","response","setResponse","fetch","then","res","json","message","addTaskHandler","isEmptyOrSpaces","headers","method","body","JSON","stringify","ok","console","log","catch","e","onChangeHandler","evt","target","value","str","match","data"],"sources":["/home/chess/01_Projects/amana/ReactJS-TaskMiniProject/client/src/components/TaskAdder.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { useState, useEffect} from 'react';\n\nfunction TaskAdder(){\n    const [text, setText] = useState(\"\");\n    const [response, setResponse] = useState(null);\n\n    useEffect(() => {\n      fetch(\"/tasks\")\n        .then((res) => res.json())\n        .then((res) => setResponse(res.message));\n    }, []);\n\n    function addTaskHandler(){\n        if(isEmptyOrSpaces(text)) \n            return; //do nothing\n        \n        fetch('http://localhost:8000/tasks/add',\n            {   \n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: JSON.stringify({\"details\": text})\n            }\n        )\n        .then(res => {\n            if(!res.ok){\n                setResponse(\"Server Error. Failed to add task!\");\n            }\n            console.log(\"Success\");\n        })\n        .catch(e => {\n            setResponse(e.message);\n        });\n        setText(\"\");\n    }\n\n    function onChangeHandler(evt){\n        setText(evt.target.value);\n    }\n\n    function isEmptyOrSpaces(str){\n        return str === null || str.match(/^ *$/) !== null;\n    }\n\n    return (\n        <div>\n            <input type=\"text\" value={text} onChange={evt => onChangeHandler(evt)}></input>\n            <button className='btn' onClick={addTaskHandler}><FontAwesomeIcon icon={faPlusSquare}/></button>\n            <p>{!data?\"Loading\":data}</p>\n        </div>\n    );\n}\n\nexport default TaskAdder;"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;;;AAEA,SAASC,SAAT,GAAoB;EAAA;;EAChB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACdM,KAAK,CAAC,QAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAASH,WAAW,CAACG,GAAG,CAACE,OAAL,CAF5B;EAGD,CAJQ,EAIN,EAJM,CAAT;;EAMA,SAASC,cAAT,GAAyB;IACrB,IAAGC,eAAe,CAACV,IAAD,CAAlB,EACI,OAFiB,CAET;;IAEZI,KAAK,CAAC,iCAAD,EACD;MACIO,OAAO,EAAE;QACL,gBAAgB;MADX,CADb;MAIIC,MAAM,EAAE,MAJZ;MAKIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAC,WAAWf;MAAZ,CAAf;IALV,CADC,CAAL,CASCK,IATD,CASMC,GAAG,IAAI;MACT,IAAG,CAACA,GAAG,CAACU,EAAR,EAAW;QACPb,WAAW,CAAC,mCAAD,CAAX;MACH;;MACDc,OAAO,CAACC,GAAR,CAAY,SAAZ;IACH,CAdD,EAeCC,KAfD,CAeOC,CAAC,IAAI;MACRjB,WAAW,CAACiB,CAAC,CAACZ,OAAH,CAAX;IACH,CAjBD;IAkBAP,OAAO,CAAC,EAAD,CAAP;EACH;;EAED,SAASoB,eAAT,CAAyBC,GAAzB,EAA6B;IACzBrB,OAAO,CAACqB,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAP;EACH;;EAED,SAASd,eAAT,CAAyBe,GAAzB,EAA6B;IACzB,OAAOA,GAAG,KAAK,IAAR,IAAgBA,GAAG,CAACC,KAAJ,CAAU,MAAV,MAAsB,IAA7C;EACH;;EAED,oBACI;IAAA,wBACI;MAAO,IAAI,EAAC,MAAZ;MAAmB,KAAK,EAAE1B,IAA1B;MAAgC,QAAQ,EAAEsB,GAAG,IAAID,eAAe,CAACC,GAAD;IAAhE;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEb,cAAjC;MAAA,uBAAiD,QAAC,eAAD;QAAiB,IAAI,EAAEb;MAAvB;QAAA;QAAA;QAAA;MAAA;IAAjD;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,UAAI,CAAC+B,IAAD,GAAM,SAAN,GAAgBA;IAApB;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH;;GAlDQ5B,S;;KAAAA,S;AAoDT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}